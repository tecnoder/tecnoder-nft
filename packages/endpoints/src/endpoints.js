"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTokenHistoryUrl = exports.getTokensOnSaleWithFilterUrl = exports.getTokensOnSaleUrl = exports.cancelSecondarySaleUrl = exports.sellTokenUrl = exports.getMyTokenHistoryUrl = exports.getAllMyTokensURL = exports.getUserDetailsURL = exports.deletePackUrl = exports.createPackUrl = exports.getNftPlatformTypeUrl = exports.getDropTypesUrl = exports.getAvailablePackDropsUrl = exports.createDropUrl = exports.deleteDropUrl = exports.getAthleteCollectionsUrl = exports.deleteAthleteUrl = exports.updateAthleteUrl = exports.getAllAthletesUrl = exports.createAthleteUrl = exports.getPackAndDropsForSaleCount = exports.getPackAndDropsForSaleUrl = exports.subscribeUrl = exports.searchByUserProfileUrl = exports.getAthleteByIdUrl = exports.contactUsUrl = exports.getAllAthleteUrl = exports.getNftPlatformTypesUrl = exports.getAthleteRolesUrl = exports.updateUserDetailsUrl = exports.logoutUrl = exports.validateTotpUrl = exports.changeTwoFactorAuthenticationUrl = exports.getQR = exports.verifyResetPasswordUrl = exports.reSendRegistrationEmailUrl = exports.sendResetPasswordVerificationEmailUrl = exports.resetPasswordUrl = exports.getSessionUserUrl = exports.loginUrl = exports.registerUserUrl = exports.verifyUserUrl = exports.createUserUrl = void 0;
exports.createUserUrl = "/user-management/create-user";
const verifyUserUrl = (vid) => `/user-management/verify-user?vid=${vid}`;
exports.verifyUserUrl = verifyUserUrl;
exports.registerUserUrl = "/user-management/register-user";
exports.loginUrl = "/user-management/login";
exports.getSessionUserUrl = "/user-management/get-session-user";
exports.resetPasswordUrl = '/user-management/reset-password';
const sendResetPasswordVerificationEmailUrl = (emailId) => `/user-management/send-reset-password-verification-email?emailId=${emailId}`;
exports.sendResetPasswordVerificationEmailUrl = sendResetPasswordVerificationEmailUrl;
const reSendRegistrationEmailUrl = (emailId) => `/user-management/re-send-registration-email?emailId=${emailId}`;
exports.reSendRegistrationEmailUrl = reSendRegistrationEmailUrl;
const verifyResetPasswordUrl = (vid) => `/user-management/verify-reset-password?vid=${vid}`;
exports.verifyResetPasswordUrl = verifyResetPasswordUrl;
exports.getQR = "/user-management/get-qr";
exports.changeTwoFactorAuthenticationUrl = "/user-management/change-two-factor";
exports.validateTotpUrl = "/user-management/validate-totp";
exports.logoutUrl = "/user-management/sign-out";
exports.updateUserDetailsUrl = "/rest/user/update-user-details";
exports.getAthleteRolesUrl = "/public/get-athlete-roles";
exports.getNftPlatformTypesUrl = "/public/getNftPlatformType";
exports.getAllAthleteUrl = "/public/getAllAthlete";
exports.contactUsUrl = "/public/contact-us";
const getAthleteByIdUrl = (athleteId) => `/public/getAthleteById?athleteId=${athleteId}`;
exports.getAthleteByIdUrl = getAthleteByIdUrl;
const searchByUserProfileUrl = (profileName) => `/public/search-users-by-profile?profileName=${profileName}`;
exports.searchByUserProfileUrl = searchByUserProfileUrl;
const subscribeUrl = (emailId, status) => `/public/subscribe?emailId=${emailId}&status=${status}`;
exports.subscribeUrl = subscribeUrl;
const getPackAndDropsForSaleUrl = (pgNo, pgSize) => `/public/get-packs-and-drops-for-sale?pageNumber=${pgNo}&pageSize=${pgSize}`;
exports.getPackAndDropsForSaleUrl = getPackAndDropsForSaleUrl;
exports.getPackAndDropsForSaleCount = `/public/get-packs-and-drops-for-sale-count`;
exports.createAthleteUrl = "/rest/admin/create-athlete";
exports.getAllAthletesUrl = "/public/get-athletes";
exports.updateAthleteUrl = "/rest/admin/update-athlete";
const deleteAthleteUrl = (athleteId) => '/rest/admin/delete-athlete?athleteId=' + athleteId;
exports.deleteAthleteUrl = deleteAthleteUrl;
const getAthleteCollectionsUrl = (athleteId) => '/rest/admin/getAthleteConnections?athleteId=' + athleteId;
exports.getAthleteCollectionsUrl = getAthleteCollectionsUrl;
const deleteDropUrl = (dropId) => '/rest/admin/delete-drop?dropId=' + dropId;
exports.deleteDropUrl = deleteDropUrl;
exports.createDropUrl = "/rest/admin/create-drop";
exports.getAvailablePackDropsUrl = "/rest/admin/get-nonpack-drops";
exports.getDropTypesUrl = "/public/get-drop-type";
exports.getNftPlatformTypeUrl = "/public/get-nft-platform-type";
exports.createPackUrl = "/rest/admin/create-pack";
const deletePackUrl = (dropId) => '/rest/admin/delete-pack=' + dropId;
exports.deletePackUrl = deletePackUrl;
exports.getUserDetailsURL = "/rest/user/get-user-details";
exports.getAllMyTokensURL = "/rest/user/get-my-tokens";
exports.getMyTokenHistoryUrl = "/rest/user/get-my-token-history";
exports.sellTokenUrl = "/rest/user/sell-token";
exports.cancelSecondarySaleUrl = "/rest/user/cancel-secondary-sale";
const getTokensOnSaleUrl = (sortBy, sortOrder) => `/public/get-tokens-on-sale?sortByType=${sortBy}&sortByOrder=${sortOrder}`;
exports.getTokensOnSaleUrl = getTokensOnSaleUrl;
const getTokensOnSaleWithFilterUrl = (pageNumber, pageSize, sortBy, sortOrder) => `/public/get-tokens-on-sale-with-filters?pageNumber=${pageNumber}&pageSize=${pageSize}&sortByType=${sortBy}&sortByOrder=${sortOrder}`;
exports.getTokensOnSaleWithFilterUrl = getTokensOnSaleWithFilterUrl;
const getTokenHistoryUrl = (platformTokenId) => "/public/get-token-history?platformTokenId=" + platformTokenId;
exports.getTokenHistoryUrl = getTokenHistoryUrl;
//# sourceMappingURL=endpoints.js.map